language: rust
rust:
    - 1.48.0

services:
    - docker

# all unlabeled jobs run at test. Only if all "test" jobs finish, will the publish job run
stages:
    - test
    - publish

jobs:
    include:
        # PRs, pushes to main, and tags build on all target arches
        # if this is release tag, the resultant binary will be uploaded to github
        - name: "Linux - Node 10 - glibc"
          os: linux
          env:
              - TRAVIS_NODE_VERSION="10"
              - SKIP_DEPLOY=0
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = main OR type = pull_request
        - name: "Linux - Node 10 - musl"
          os: linux
          env:
              - SKIP_DEPLOY=0
              # Node 10 and Alpine 3.10/3.11 do not play well together and causes a random
              # segfault when we try to run jest. So use Alpine 3.9 which does work.
              # Ref: https://github.com/nodejs/docker-node/issues/1158
              - IMAGE=10-alpine3.9
              - INDOCKER="docker exec target"
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = main OR type = pull_request
        - name: "OSX - Node 10"
          os: osx
          env:
              - TRAVIS_NODE_VERSION="10"
              - SKIP_DEPLOY=0
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = main OR type = pull_request
        - name: "Linux - Node 12 - glibc"
          os: linux
          env:
              - TRAVIS_NODE_VERSION="12"
              - SKIP_DEPLOY=0
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = main OR type = pull_request
        - name: "Linux - Node 12 - musl"
          os: linux
          env:
              - SKIP_DEPLOY=0
              - IMAGE=12-alpine
              - INDOCKER="docker exec target"
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = main OR type = pull_request
        - name: "OSX - Node 12"
          os: osx
          env:
              - TRAVIS_NODE_VERSION="12"
              - SKIP_DEPLOY=0
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = main OR type = pull_request
        - name: "Windows - Node 10"
          os: windows
          env:
              # Stop Windows builds from hanging after completion https://travis-ci.community/t/timeout-after-build-finished-and-succeeded/1336
              - YARN_GPG=no
              - TRAVIS_NODE_VERSION="10"
              - SKIP_DEPLOY=0
          install:
              - rustup target add x86_64-pc-windows-msvc
              - source .travis_scripts/maybe-install-node.sh
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = main OR type = pull_request
        - name: "Windows - Node 12"
          os: windows
          env:
              # Stop Windows builds from hanging after completion https://travis-ci.community/t/timeout-after-build-finished-and-succeeded/1336
              - YARN_GPG=no
              - TRAVIS_NODE_VERSION="12"
              - SKIP_DEPLOY=0
          install:
              - rustup target add x86_64-pc-windows-msvc
              - source .travis_scripts/maybe-install-node.sh
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = main OR type = pull_request
        - name: "Linux - Node 14 - glibc"
          os: linux
          env:
              - TRAVIS_NODE_VERSION="14"
              - SKIP_DEPLOY=0
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = main OR type = pull_request
        - name: "Linux - Node 14 - musl"
          os: linux
          env:
              - SKIP_DEPLOY=0
              - IMAGE=14-alpine
              - INDOCKER="docker exec target"
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = main OR type = pull_request
        - name: "OSX - Node 14"
          os: osx
          env:
              - TRAVIS_NODE_VERSION="14"
              - SKIP_DEPLOY=0
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = main OR type = pull_request
        - name: "Windows - Node 14"
          os: windows
          env:
              # Stop Windows builds from hanging after completion https://travis-ci.community/t/timeout-after-build-finished-and-succeeded/1336
              - YARN_GPG=no
              - TRAVIS_NODE_VERSION="14"
              - SKIP_DEPLOY=0
          install:
              - rustup target add x86_64-pc-windows-msvc
              - source .travis_scripts/maybe-install-node.sh
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = main OR type = pull_request
        # Publish to npm only on release tag
        - stage: publish
          name: "Publish to npm"
          os: linux
          env:
              - TRAVIS_NODE_VERSION="14"
              - SKIP_DEPLOY=1

              # NPM_TOKEN
              - secure: jmqOY1NsZTA03HZFwR64GK1juUADRfNEZ+4RUSjj05vxYJovLU8YtHRLoiZrKSrQDeOMdueCjONO3SjcZ/3/ZMo6fcFWR3VZcRAeEqzyTRoLQorPjcsMFVT1xBYWOT/9KBAI6/SoyFAsaLui7rZt3ZJbl5twNjC/e0jnpJa2kUIYLA3GtSBLjT6odeQu/AkxxOfBnhgpwb4+kP0fbSyZWRyPxq6ldnomL6QqeWfKWRx0NJ+2wx1InDC3moHPhYvQsTotRuGbyXSsl9md8DcVUhKdrmduqS0PrDyqYbIEorA9TdWO+fHEdlveuy7WAtM+YADIlhkX8318K4QjzdNyMFnoLitGMk76V64ak2119T9P3gG4aiYYBI/fn2nN2zDIbROK0PynPWHkWmQEKiZvsde58ooYjm5LG+jJQcLzFW/ME9yE6PmkmgxaSvvho/cABMgBPIla+AkQuDO0ckn7k192UOtVY/4iHqnYx/aYscxWlj5t38MSeb3eoZsK6f38ARtb0jdYkZkZpN7ACkWoiFr6eaXkuSijMay1dBZ7bd0MQ4rVIJ4/3UBicrvkuEDoF4E4ONxYHDtJWHCkzuVFFHR8Ix0zVt/KvWZBTCue/9c6nHvfBVFH0x2z+xw9j5kasScwn77oaQ/+mfaZNYcWdxNaq4Ct57nXHTlhZexSSIk=
          if: tag =~ /^\d+\.\d+\.\d+/
          before_install:
              - npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
          script:
              - echo "Deploying to NPM..."
              - node publish.js --publish

before_install:
    - ./.travis_scripts/maybe-start-docker.sh

# this install not used by windows builds
install:
    - source .travis_scripts/maybe-install-node.sh

notifications:
    email:
        on_success: change
        on_failure: always
cache:
    yarn: true
    cargo: true
    directories:
        - node_modules
before_script:
    - ${INDOCKER} rustup component add rustfmt-preview
    - ${INDOCKER} yarn --ignore-scripts
script:
    - ${INDOCKER} /bin/sh -c "cd native/ && cargo fmt -- --check"
    - ${INDOCKER} node publish.js

# deploy the node-pre-gyp binary to github releases so it's there when the npm package is installed
deploy:
    provider: releases
    api_key:
        secure: bqeFXHY/NMLwbyIY4ch/KFhTyEpZFeO8MeHKTKEPdqk7OPh77aShiixUNNi1oBv8Nw4sjqM1nhx+j5UlPcbyPD4IWlosgPkYpNzZgcSUM61UEaSJ7oa3QYi6fT/qawTeGX7g7iVV72Sz9NMk+dSTZMSZM02iBcFczGgsfyq+cyV5HJiyP7DcSASARsXXt72D4B9GKVmqa6n5Dk8FSwE024h/duLtzPAEWAxK3eJsaDN0OdJKXq7/nTtEf0Hblbl0hkO4ce3RVZQg3nm0k1IDabglEMto9t6BavZobEm9YZoeePhAdH/WybSGBvJKwN29D9fNvNBf8UDBxa8gL3pIdLM8yucBWL888ku/zs6cAlg2BcY7e8gOiVuYUh8pznXPpYbo65N1w+EzuwQk/MgHPr/Fnh7Uois+1ymtQhxXbFqvqDXFDCHh7P3n4H6uN15iTpqdvHkC1HCnebL47bW657AD1spB6pNefWOUVpa66abWXmEoRakpGHaIdbhlKoaPo1tkImlSRbW/3Yt4zRSn3Dv1Va7vrRLtoJ4mD/ilD7QhmJK/ksqncS02hCQjiTExplS+2VjV4kZA4+lNmkTo3EyhS+DKZrPcXa/AMu/n7yFXpRNX6gUtDbbp8+QlODbOauooaL82RNb8Xw46jiqtUapKpo+dYOFwWFQgmSi5PKQ=
    file_glob: true
    file: bin-package/*.tar.gz
    skip_cleanup: true

    # publish only if we're building a tag and if the SKIP_DEPLOY is set to 0
    on:
        tags: true
        condition: $SKIP_DEPLOY = 0
    name: Version $TRAVIS_TAG
