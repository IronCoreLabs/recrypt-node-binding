language: rust
rust:
    - 1.38.0

services:
    - docker

# all unlabeled jobs run at test. Only if all "test" jobs finish, will the publish job run
stages:
    - test
    - publish

jobs:
    include:
        # PRs, pushes to master, and tags build on all target arches
        # if this is release tag, the resultant binary will be uploaded to github
        - name: "Linux - Node 8 - glibc"
          os: linux
          env:
              - TRAVIS_NODE_VERSION="8"
              - SKIP_DEPLOY=0
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
        - name: "Linux - Node 8 - musl"
          os: linux
          env:
              - SKIP_DEPLOY=0
              - IMAGE=8-alpine
              - INDOCKER="docker exec target"
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
        - name: "OSX - Node 8"
          os: osx
          env:
              - TRAVIS_NODE_VERSION="8"
              - SKIP_DEPLOY=0
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
        - name: "Linux - Node 10 - glibc"
          os: linux
          env:
              - TRAVIS_NODE_VERSION="10"
              - SKIP_DEPLOY=0
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
        - name: "Linux - Node 10 - musl"
          os: linux
          env:
              - SKIP_DEPLOY=0
              - IMAGE=10-alpine
              - INDOCKER="docker exec target"
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
        - name: "OSX - Node 10"
          os: osx
          env:
              - TRAVIS_NODE_VERSION="10"
              - SKIP_DEPLOY=0
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
        - name: "Linux - Node 12 - glibc"
          os: linux
          env:
              - TRAVIS_NODE_VERSION="12"
              - SKIP_DEPLOY=0
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
        - name: "Linux - Node 12 - musl"
          os: linux
          env:
              - SKIP_DEPLOY=0
              - IMAGE=12-alpine
              - INDOCKER="docker exec target"
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = master OR type = pull_request
        - name: "OSX - Node 12"
          os: osx
          env:
              - TRAVIS_NODE_VERSION="12"
              - SKIP_DEPLOY=0
          if: tag =~ /^\d+\.\d+\.\d+/ OR branch = master OR type = pull_request

        # Publish to npm only on release tag
        - stage: publish
          name: "Publish to npm"
          os: linux
          env:
              - TRAVIS_NODE_VERSION="8"
              - SKIP_DEPLOY=1

              # NPM_TOKEN
              - secure: Jm9ax8QP+t8DhuDfU7ek4bH85XSAei8Ex5MmETr1A0+5ELQ6RnGcR9Z6PE4BZN4hTZkytmHePdJ4MvB5MfB0EBoZf2DHUbk/E0/stAFzQlsqu4WSDeHD1+LcoN9k4vg+3eVL8I7T7IMtt3mLiwrdaqbDO220UrQewiU+6DzsDIeAOAFCjYGurxdUbjfKv4P/5Fik2jmDQeu/+C70ZCkWq0jtisXke07Kj43+VGZCUfCxObg/9t3u6g7MyllF7CGLmxHXEgdDMSP56/PProqch5MlljSie/D1ze1LH5wpBcaex9fiGKnfOW23r8i8CG7EYSHaePcmBes6fwW1gcvQ5NmGSGFg0r0UZa82ux4X5SEEHfuU+F0ylU3COJGVGiZVD4vx6m+Gm2SffXsJ6ATU0MCU2ZFpwiEdVQxdCYDDXNqTk7WMiQP+UNiuHLZCKvs+caiRXTZlEVR33TzMooJY8BgU8jv3sHT3fI3O19Pii0hS3ymvM7M7LxPt6wKNk49chn4ouoTUbJZ4HEfomETgFc5/wp7Ozyoemx2Rf1pNQjx3KUFMCbzSuFVPyaIHjc2UViw/7svFzaHQlNTOkFBf9AxCyrrSmHP7VnXke/ujofHpdn9KSAFR2fs5VwLNuxKLcSf44ig9SNt37yO6c2JDA+heSE7aZ88E11NPRfyfyA0=
          if: tag =~ /^\d+\.\d+\.\d+/
          before_install:
              - npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
          script:
              - echo "Deploying to NPM..."
              - node publish.js --publish

before_install:
    - ./.travis_scripts/maybe-start-docker.sh

install:
    - source .travis_scripts/maybe-install-node.sh

notifications:
    email:
        on_success: change
        on_failure: always
cache:
    yarn: true
    cargo: true
    directories:
        - node_modules
before_script:
    - ${INDOCKER} rustup component add rustfmt-preview
    - ${INDOCKER} yarn --ignore-scripts
script:
    - ${INDOCKER} /bin/sh -c "cd native/ && cargo fmt -- --check"
    - ${INDOCKER} node publish.js

# deploy the node-pre-gyp binary to github releases so it's there when the npm package is installed
deploy:
    provider: releases
    api_key:
        secure: bqeFXHY/NMLwbyIY4ch/KFhTyEpZFeO8MeHKTKEPdqk7OPh77aShiixUNNi1oBv8Nw4sjqM1nhx+j5UlPcbyPD4IWlosgPkYpNzZgcSUM61UEaSJ7oa3QYi6fT/qawTeGX7g7iVV72Sz9NMk+dSTZMSZM02iBcFczGgsfyq+cyV5HJiyP7DcSASARsXXt72D4B9GKVmqa6n5Dk8FSwE024h/duLtzPAEWAxK3eJsaDN0OdJKXq7/nTtEf0Hblbl0hkO4ce3RVZQg3nm0k1IDabglEMto9t6BavZobEm9YZoeePhAdH/WybSGBvJKwN29D9fNvNBf8UDBxa8gL3pIdLM8yucBWL888ku/zs6cAlg2BcY7e8gOiVuYUh8pznXPpYbo65N1w+EzuwQk/MgHPr/Fnh7Uois+1ymtQhxXbFqvqDXFDCHh7P3n4H6uN15iTpqdvHkC1HCnebL47bW657AD1spB6pNefWOUVpa66abWXmEoRakpGHaIdbhlKoaPo1tkImlSRbW/3Yt4zRSn3Dv1Va7vrRLtoJ4mD/ilD7QhmJK/ksqncS02hCQjiTExplS+2VjV4kZA4+lNmkTo3EyhS+DKZrPcXa/AMu/n7yFXpRNX6gUtDbbp8+QlODbOauooaL82RNb8Xw46jiqtUapKpo+dYOFwWFQgmSi5PKQ=
    file_glob: true
    file: bin-package/*.tar.gz
    skip_cleanup: true

    # publish only if we're building a tag and if the SKIP_DEPLOY is set to 0
    on:
        tags: true
        condition: $SKIP_DEPLOY = 0
    name: Version $TRAVIS_TAG
