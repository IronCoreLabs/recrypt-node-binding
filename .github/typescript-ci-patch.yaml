# Run tests on different versions of node and rust, and on different OSes.
- op: replace
  path: /jobs/test/strategy/matrix
  value:
    node_version:
      - "10"
      - "12"
      - "14"
    rust_version:
      - 1.48.0
      - stable
      - beta
    os:
      - macos-10.15
      - ubuntu-20.04
      - windows-2019
- op: add
  path: /jobs/test/strategy/fail-fast
  value: false
- op: replace
  path: /jobs/test/runs-on
  value: "${{ matrix.os }}"

# These steps are lifted from the Rust CI workflow, cargo-test job.
- op: add
  path: /jobs/test/steps/3
  value:
    uses: actions-rs/toolchain@v1
    with:
      profile: minimal
      toolchain: ${{ matrix.rust_version }}
      override: true

# Modify the yarn actions.
- op: replace
  path: /jobs/test/steps/4/run
  value: yarn install --ignore-scripts
- op: add
  path: /jobs/test/steps/5
  value:
    name: Compile
    run: yarn run compile

# Only check coverage in one of the matrix job instances.
- op: add
  path: /jobs/test/steps/7/if
  value: ${{ contains(matrix.os, 'ubuntu') && matrix.node_version == '10' && matrix.rust_version == 'stable' }}

# Also run on musl. That means we need to run it in a Docker container. To do that, we copy the entire job and modify its
# strategy/matrix.
- op: copy
  from: /jobs/test
  path: /jobs/test-docker
- op: replace
  path: /jobs/test-docker/strategy/matrix/os
  value:
    - ubuntu-18.04
- op: add
  path: /jobs/test-docker/container
  value:
    image: node:${{ matrix.node_version }}-alpine
# Set up some tools in the container that our other actions depend on.
- op: add
  path: /jobs/test-docker/steps/0
  value:
    run: apk add build-base git python3 wget
- op: add
  path: /jobs/test-docker/steps/1
  value:
    run: echo RUSTFLAGS="-C target-feature=-crt-static" >> "${GITHUB_ENV}"
