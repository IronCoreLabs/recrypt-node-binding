#!/bin/bash

# This script is copied from the depot repo; edit it there, not in the destination repo.

# Copy the requested templates from the templates repo to this one, applying patches as we go.
# You must be in the target repo when you run this, and depot must be checked out as a sibling to this repo.

set -e
set -o pipefail

THISREPO=$(git rev-parse --show-toplevel)
TEMPLATES="${THISREPO}/../depot/github-actions/.github"

if [ $# -ge 1 ] ; then
    WORKFLOWS=$*
else
    # Scan to see which templates are installed, and update them.
    for WF in "${THISREPO}"/.github/workflows/*.yaml ; do
        BASE=$(basename "${WF}")
        if [ -f "${TEMPLATES}/workflows/${BASE}" ] ; then
            WORKFLOWS="${WORKFLOWS} ${BASE}"
        fi
    done

    if [ -z "${WORKFLOWS}" ] ; then
        echo "No workflows specified as args, and none found in ${THISREPO}/.github/workflows." 1>&2
        exit 1
    fi
fi

for X in jsonpatch yaml2json json2yaml ; do
    if ! command -v ${X} &> /dev/null ; then
        echo "Can't find ${X} on the PATH." 1>&2
        exit 1
    fi
done

mkdir -p "${THISREPO}/.github/workflows"
for WF in ${WORKFLOWS} ; do
    echo "Updating ${WF}..."
    BASE=$(basename "${WF}" .yaml)
    YAMLPATCH=".github/${BASE}-patch.yaml"
    JSONPATCH="/tmp/${BASE}-patch.json"

    # Remove the target files before creating them from scratch. This lets us handle file renames and deletes.
    rm -f "${THISREPO}"/.github/"${BASE}".*

    # Copy the workflow file, using jsonpatch.
    (
        echo "# DO NOT EDIT THIS FILE."
        echo "# Instead, edit the jsonpatch file (actually YAML) in ${YAMLPATCH}"
        echo "# For docs, see github-actions in the IronCoreLabs/depot repo."
        echo ""
        if [ -f "${THISREPO}/${YAMLPATCH}" ] ; then
            yaml2json < "${THISREPO}/${YAMLPATCH}" > "${JSONPATCH}"
            yaml2json < "${TEMPLATES}/workflows/${WF}" | jsonpatch - "${JSONPATCH}" | json2yaml
        else
            yaml2json < "${TEMPLATES}/workflows/${WF}" | json2yaml
        fi
    ) > "${THISREPO}/.github/workflows/${WF}"

    # Copy any related files or directories with the same name.
    find "${TEMPLATES}" -name "${BASE}.*" ! -name "${BASE}.yaml" -print | while read -r SRCFILE ; do
        DSTFILE="${THISREPO}/.github/$(basename "${SRCFILE}")"
        # First unlink it, to prevent this script from overwriting itself while it's running.
        rm -f "${DSTFILE}"
        cp "${SRCFILE}" "${DSTFILE}"
    done

    # If there's an example patch file in depot, but none in this repo, copy it over.
    # If you add an example patch file that's really optional, you'll need to change this logic.
    SRCPATCH="${TEMPLATES}/${BASE}-patch.yaml"
    DSTPATCH="${THISREPO}/.github/${BASE}-patch.yaml"
    if [ -f "${SRCPATCH}" ] && ! [ -f "${DSTPATCH}" ] ; then
        echo ""
        echo "Copying ${SRCPATCH} to ${DSTPATCH}; make sure you customize it."
        cp "${SRCPATCH}" "${DSTPATCH}"
        # Be annoying to catch the user's attention.
        echo ""
        echo ""
        sleep 5
    fi
done
