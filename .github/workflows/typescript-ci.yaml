# DO NOT EDIT THIS FILE.
# Instead, edit the jsonpatch file (actually YAML) in .github/typescript-ci-patch.yaml
# For docs, see github-actions in the IronCoreLabs/depot repo.

name: TypeScript CI
'on':
  push:
    branches:
    - main
  pull_request: null
  workflow_dispatch: null
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version:
        - '10'
        - '12'
        - '14'
        rust_version:
        - 1.48.0
        - stable
        - beta
        os:
        - macos-10.15
        - ubuntu-20.04
        - windows-2019
    steps:
    - uses: actions/checkout@v2
    - uses: c-hive/gha-yarn-cache@v1
    - uses: actions/setup-node@v2.1.5
      with:
        node-version: ${{ matrix.node_version }}
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust_version }}
        override: true
    - uses: Swatinem/rust-cache@v1
      id: rust-cache
    - name: Install sccache
      if: steps.rust-cache.outputs.cache-hit != 'true'
      uses: IronCoreLabs/rust-install@v0.1.0
      with:
        crate: sccache
        accesskey: AKIAU2WBY6VDTC563V7G
        secretkey: ${{ secrets.TOOL_CACHE_SECRET_KEY }}
        os: ubuntu-20.04
        version: latest
    - name: Setup sccache env variables
      if: steps.rust-cache.outputs.cache-hit != 'true'
      run: 'echo "RUSTC_WRAPPER=$HOME/.cargo/bin/sccache" >> $GITHUB_ENV

        echo "AWS_ACCESS_KEY_ID=AKIAU2WBY6VDVHUO5WSN" >> $GITHUB_ENV

        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.SCCACHE_AWS_SECRET }}" >> $GITHUB_ENV

        echo "SCCACHE_BUCKET=sccache-rust" >> $GITHUB_ENV

        echo "SCCACHE_S3_USE_SSL=true" >> $GITHUB_ENV

        '
    - name: Install modules
      run: yarn install --ignore-scripts
    - name: Compile
      run: yarn run compile
    - name: Run tests
      run: yarn run test
    - name: Check test coverage
      if: github.base_ref != ''
      uses: anuraag016/Jest-Coverage-Diff@V1.1
      with:
        fullCoverageDiff: false
        delta: 0.2
    - name: Print sccache stats
      if: steps.rust-cache.outputs.cache-hit != 'true'
      run: sccache -s
  test-docker:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node_version:
        - '10'
        - '12'
        - '14'
        rust_version:
        - 1.48.0
        - stable
        - beta
        os:
        - ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: c-hive/gha-yarn-cache@v1
    - uses: actions/setup-node@v2.1.5
      with:
        node-version: ${{ matrix.node_version }}
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust_version }}
        override: true
    - uses: Swatinem/rust-cache@v1
      id: rust-cache
    - name: Install sccache
      if: steps.rust-cache.outputs.cache-hit != 'true'
      uses: IronCoreLabs/rust-install@v0.1.0
      with:
        crate: sccache
        accesskey: AKIAU2WBY6VDTC563V7G
        secretkey: ${{ secrets.TOOL_CACHE_SECRET_KEY }}
        os: ubuntu-20.04
        version: latest
    - name: Setup sccache env variables
      if: steps.rust-cache.outputs.cache-hit != 'true'
      run: 'echo "RUSTC_WRAPPER=$HOME/.cargo/bin/sccache" >> $GITHUB_ENV

        echo "AWS_ACCESS_KEY_ID=AKIAU2WBY6VDVHUO5WSN" >> $GITHUB_ENV

        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.SCCACHE_AWS_SECRET }}" >> $GITHUB_ENV

        echo "SCCACHE_BUCKET=sccache-rust" >> $GITHUB_ENV

        echo "SCCACHE_S3_USE_SSL=true" >> $GITHUB_ENV

        '
    - name: Install modules
      run: yarn install --ignore-scripts
    - name: Compile
      run: yarn run compile
    - name: Run tests
      run: yarn run test
    - name: Check test coverage
      if: github.base_ref != ''
      uses: anuraag016/Jest-Coverage-Diff@V1.1
      with:
        fullCoverageDiff: false
        delta: 0.2
    - name: Print sccache stats
      if: steps.rust-cache.outputs.cache-hit != 'true'
      run: sccache -s
    container:
      image: node:${{ matrix.node_version }}-alpine
